# Gitleaks configuration for secret scanning
# Documentation: https://github.com/gitleaks/gitleaks

title = "Gitleaks Configuration"

# Extend the base configuration
[extend]
useDefault = true

# Additional custom rules for common secrets

# AWS Credentials
[[rules]]
id = "aws-access-key"
description = "AWS Access Key"
regex = '''(A3T[A-Z0-9]|AKIA|ASIA|ABIA|ACCA)[A-Z0-9]{16}'''
keywords = ["akia", "asia", "abia", "acca"]
tags = ["aws", "key"]

[[rules]]
id = "aws-secret-key"
description = "AWS Secret Key"
regex = '''(?i)aws[_\-\s]?(?:secret|sec)[_\-\s]?(?:access[_\-\s]?)?(?:key|k)[\s]*[:=][\s]*['\"]?([a-zA-Z0-9/+=]{40})['\"]?'''
keywords = ["aws"]
tags = ["aws", "secret"]

# GitHub Tokens
[[rules]]
id = "github-pat"
description = "GitHub Personal Access Token"
regex = '''ghp_[a-zA-Z0-9]{36}'''
keywords = ["ghp_"]
tags = ["github", "token"]

[[rules]]
id = "github-oauth"
description = "GitHub OAuth Access Token"
regex = '''gho_[a-zA-Z0-9]{36}'''
keywords = ["gho_"]
tags = ["github", "oauth"]

[[rules]]
id = "github-app"
description = "GitHub App Token"
regex = '''(ghu|ghs|ghr)_[a-zA-Z0-9]{36}'''
keywords = ["ghu_", "ghs_", "ghr_"]
tags = ["github", "app"]

# JWT and Auth
[[rules]]
id = "jwt-token"
description = "JWT Token"
regex = '''eyJ[A-Za-z0-9-_]+\.eyJ[A-Za-z0-9-_]+\.[A-Za-z0-9-_]+'''
keywords = ["eyJ"]
tags = ["jwt", "token"]

[[rules]]
id = "next-auth-secret"
description = "NextAuth Secret"
regex = '''(?i)(nextauth[_\-]?secret|auth[_\-]?secret)\s*[=:]\s*['\"]([^'\"]{16,})['\"]'''
entropy = 3.5
tags = ["nextauth", "secret"]

# Database Connections
[[rules]]
id = "database-url-with-password"
description = "Database Connection String with Password"
regex = '''(?i)(?:postgres|postgresql|mysql|mariadb|mongodb|redis)://[^:]+:([^@]+)@[^/]+'''
keywords = ["postgres", "mysql", "mongodb", "redis"]
tags = ["database", "password"]

[[rules]]
id = "database-url"
description = "Database Connection String"
regex = '''(?i)(database[_\-]?url|db[_\-]?url|postgres[_\-]?url|mysql[_\-]?url|mongodb[_\-]?url)\s*[=:]\s*['\"]([^'\"]+)['\"]'''
tags = ["database", "connection"]

# API Keys and Secrets
[[rules]]
id = "generic-api-key"
description = "Generic API Key"
regex = '''(?i)(?:api[_\-\s]?(?:key|token|secret)|apikey)[\s]*[:=][\s]*['\"]([a-zA-Z0-9\-_]{20,})['\"]'''
entropy = 3.5
keywords = ["api", "apikey", "api_key", "api-key"]
tags = ["api", "key"]

# Private Keys
[[rules]]
id = "private-key"
description = "Private Key"
regex = '''-----BEGIN (RSA|DSA|EC|OPENSSH|PGP|PRIVATE) (PRIVATE )?KEY-----'''
tags = ["private", "key"]

# Passwords - More Specific Patterns
[[rules]]
id = "hardcoded-password"
description = "Hardcoded Password"
regex = '''(?i)(?:password|passwd|pwd)[\s]*[:=][\s]*['\"]([^'\"]{8,})['\"]'''
entropy = 3.0
keywords = ["password", "passwd", "pwd"]
tags = ["password"]

[[rules]]
id = "env-password"
description = "Environment Variable Password"
regex = '''(?i)(?:PASSWORD|PASSWD|PWD|PASS)[\s]*=[\s]*([^\s'\"]{8,})'''
keywords = ["PASSWORD", "PASSWD", "PWD"]
tags = ["password", "env"]

[[rules]]
id = "json-password"
description = "JSON Password Field"
regex = '''"(?i)(?:password|passwd|pwd|pass|secret)"[\s]*:[\s]*"([^"]{8,})"'''
keywords = ["password", "passwd", "pwd", "secret"]
tags = ["password", "json"]

# Allowlist for false positives
[allowlist]
description = "Global allowlist"
paths = [
  # Ignore test files
  '''tests?\/.*''',
  '''.*\.test\.(js|ts|jsx|tsx)$''',
  '''.*\.spec\.(js|ts|jsx|tsx)$''',
  # Ignore documentation
  '''docs?\/.*''',
  '''.*\.md$''',
  # Ignore lock files
  '''package-lock\.json''',
  '''pnpm-lock\.yaml''',
  '''yarn\.lock''',
  # Ignore build output
  '''\.next\/.*''',
  '''dist\/.*''',
  '''build\/.*''',
  # Ignore node_modules
  '''node_modules\/.*''',
  # Ignore secret scanning scripts themselves
  '''\.github/scripts/simple-secret-scan\.sh''',
  '''\.gitleaks\.toml'''
]

# Allow example/dummy values
regexes = [
  '''example\.com''',
  '''localhost''',
  '''127\.0\.0\.1''',
  '''your[_\-]?api[_\-]?key''',
  '''xxx+''',
  '''dummy''',
  '''fake''',
  '''placeholder''',
  '''<.*>'''
]

# Note: commits allowlist is for specific commit SHAs, not file patterns
# File patterns should be in the main paths allowlist above