{
  "name": "nextjs-boilerplate",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev --turbopack",
    "build": "next build",
    "start": "next start",
    "start:test": "NODE_ENV=test next start",
    "lint": "next lint",
    "lint:ci": "cross-env CI=true next lint --max-warnings=0",
    "lint:pre-push": "cross-env PRE_PUSH=true next lint --max-warnings=0",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "typecheck": "tsc --noEmit",
    "prepare": "husky",
    "precommit:check": "pnpm lint && pnpm format:check && pnpm typecheck",
    "precommit:fix": "pnpm lint --fix && pnpm format && pnpm typecheck",
    "test:unit": "vitest --run --config config/vitest.config.ts",
    "test:integration": "vitest --run --config config/vitest.integration.config.ts",
    "test:coverage": "vitest --run --coverage --config config/vitest.all.config.ts",
    "test:scripts": "vitest --run --dir tests/scripts",
    "test:e2e": "playwright test --config=config/playwright.config.ts",
    "test:e2e:ui": "playwright test --config=config/playwright.config.ts --ui",
    "test:e2e:debug": "playwright test --config=config/playwright.config.ts --debug",
    "docker:test": "bash scripts/check-port-conflicts.sh --compose-file docker/compose/docker-compose.test.yml --auto-resolve && docker compose -f docker/compose/docker-compose.test.yml build --parallel app-test app-integration app-server playwright && docker compose -f docker/compose/docker-compose.test.yml run --rm app-test && docker compose -f docker/compose/docker-compose.test.yml run --rm app-integration && docker compose -f docker/compose/docker-compose.test.yml up app-server -d && docker compose -f docker/compose/docker-compose.test.yml run --rm playwright && docker compose -f docker/compose/docker-compose.test.yml down",
    "docker:test:clean": "docker compose -f docker/compose/docker-compose.test.yml down -v",
    "docker:dev": "docker compose -f docker/compose/docker-compose.yml --env-file .env.base --env-file .env.dev up",
    "docker:dev:down": "docker compose -f docker/compose/docker-compose.yml --env-file .env.base --env-file .env.dev down",
    "docker:prod": "docker compose -f docker/compose/docker-compose.prod.yml --env-file .env.base --env-file .env.prod up -d",
    "metrics": "tsx scripts/measure-metrics.ts",
    "quality:check": "tsx scripts/quality-gate.ts",
    "quality:check:verbose": "tsx scripts/quality-gate.ts --verbose",
    "quality:analyze": "tsx scripts/code-quality-analysis.ts",
    "quality:analyze:verbose": "tsx scripts/code-quality-analysis.ts --verbose",
    "quality:report": "tsx scripts/unified-quality-report.ts",
    "quality:report:verbose": "tsx scripts/unified-quality-report.ts --verbose",
    "docs:check": "node scripts/check-docs.mjs",
    "changeset": "changeset",
    "changeset:version": "changeset version",
    "changeset:publish": "changeset publish",
    "release": "pnpm build && pnpm changeset:publish"
  },
  "dependencies": {
    "@hookform/resolvers": "^5.2.1",
    "@opentelemetry/api": "^1.9.0",
    "@opentelemetry/core": "^2.0.1",
    "@opentelemetry/exporter-logs-otlp-http": "^0.203.0",
    "@opentelemetry/exporter-prometheus": "^0.203.0",
    "@opentelemetry/exporter-trace-otlp-http": "^0.203.0",
    "@opentelemetry/instrumentation-pino": "^0.50.0",
    "@opentelemetry/resources": "^2.0.1",
    "@opentelemetry/sdk-metrics": "^2.0.1",
    "@opentelemetry/semantic-conventions": "^1.36.0",
    "@radix-ui/react-dialog": "^1.1.15",
    "@radix-ui/react-dropdown-menu": "^2.1.16",
    "@radix-ui/react-label": "^2.1.7",
    "@radix-ui/react-select": "^2.2.6",
    "@radix-ui/react-separator": "^1.1.7",
    "@radix-ui/react-slot": "^1.2.3",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "ioredis": "^5.7.0",
    "lucide-react": "^0.539.0",
    "next": "^15.5.2",
    "next-themes": "^0.4.6",
    "pino": "^9.9.0",
    "react": "^19.1.1",
    "react-dom": "^19.1.1",
    "react-hook-form": "^7.62.0",
    "sonner": "^2.0.7",
    "tailwind-merge": "^3.3.1",
    "uuid": "^11.1.0",
    "zod": "^4.1.5"
  },
  "devDependencies": {
    "@actions/core": "^1.11.1",
    "@actions/github": "^6.0.1",
    "@axe-core/playwright": "^4.10.2",
    "@changesets/changelog-github": "^0.5.1",
    "@changesets/cli": "^2.29.6",
    "@commitlint/cli": "^19.8.1",
    "@commitlint/config-conventional": "^19.8.1",
    "@eslint/eslintrc": "^3.3.1",
    "@jscpd/badge-reporter": "^4.0.1",
    "@lhci/cli": "^0.15.1",
    "@playwright/test": "^1.55.0",
    "@tailwindcss/postcss": "^4.1.12",
    "@testing-library/jest-dom": "^6.8.0",
    "@testing-library/react": "^16.3.0",
    "@types/node": "^20.19.11",
    "@types/react": "^19.1.12",
    "@types/react-dom": "^19.1.9",
    "@types/uuid": "^10.0.0",
    "@typescript-eslint/eslint-plugin": "^8.41.0",
    "@typescript-eslint/parser": "^8.41.0",
    "@vitejs/plugin-react": "^5.0.2",
    "@vitest/coverage-v8": "^3.2.4",
    "@vitest/eslint-plugin": "^1.3.4",
    "cross-env": "^7.0.3",
    "eslint": "^9.34.0",
    "eslint-config-next": "^15.5.2",
    "eslint-config-prettier": "^10.1.8",
    "eslint-plugin-better-tailwindcss": "~3.7.6",
    "eslint-plugin-import": "^2.32.0",
    "eslint-plugin-jsx-a11y": "^6.10.2",
    "eslint-plugin-no-secrets": "^2.2.1",
    "eslint-plugin-react-hooks": "^5.2.0",
    "eslint-plugin-security": "^3.0.1",
    "eslint-plugin-sonarjs": "^3.0.5",
    "eslint-plugin-tsdoc": "^0.4.0",
    "eslint-plugin-unicorn": "^60.0.0",
    "eslint-plugin-yml": "^1.18.0",
    "eslintcc": "^0.8.3",
    "husky": "^9.1.7",
    "js-yaml": "^4.1.0",
    "jscpd": "^4.0.5",
    "jsdom": "^26.1.0",
    "lint-staged": "^16.1.5",
    "msw": "^2.10.5",
    "pino-pretty": "^13.1.1",
    "playwright": "^1.55.0",
    "prettier": "^3.6.2",
    "prettier-plugin-tailwindcss": "^0.6.14",
    "tailwindcss": "^4.1.12",
    "testcontainers": "^11.5.1",
    "tsx": "^4.20.5",
    "tw-animate-css": "^1.3.7",
    "typedoc": "^0.28.11",
    "typescript": "^5.9.2",
    "vitest": "^3.2.4"
  }
}
