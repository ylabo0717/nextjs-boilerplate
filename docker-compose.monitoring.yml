# ==============================================================================
# Docker Compose Monitoring Configuration
#
# シンプルな監視設定：
# - Loki（ログ収集）
# - Grafana（ログ可視化）
# - Promtail（ログ転送）
# ==============================================================================

services:
  # ==============================================================================
  # Loki - ログ収集システム
  # ==============================================================================
  loki:
    image: grafana/loki:3.5.0
    ports:
      - '3100:3100'
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./docker/loki/loki-config.yaml:/etc/loki/local-config.yaml
      - loki-data:/loki
    networks:
      - monitoring-network
    healthcheck:
      test:
        ['CMD-SHELL', 'wget --no-verbose --tries=1 --spider http://localhost:3100/ready || exit 1']
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    # Resource limits
    mem_limit: 512m
    cpus: 0.25

  # ==============================================================================
  # Promtail - ログ転送エージェント
  # ==============================================================================
  promtail:
    image: grafana/promtail:latest
    command: -config.file=/etc/promtail/config.yml
    volumes:
      - ./docker/promtail/promtail-config.yml:/etc/promtail/config.yml
      # Docker logs access
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    networks:
      - app-network
      - monitoring-network
    depends_on:
      loki:
        condition: service_healthy
    restart: unless-stopped
    # Resource limits
    mem_limit: 128m
    cpus: 0.1

  # ==============================================================================
  # Grafana - 監視ダッシュボード
  # ==============================================================================
  grafana:
    image: grafana/grafana:latest
    ports:
      - '3001:3000'
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:?GRAFANA_ADMIN_PASSWORD environment variable is required for security}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SERVER_DOMAIN=${GRAFANA_DOMAIN:-localhost}
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    volumes:
      - grafana-data:/var/lib/grafana
      - ./docker/grafana/provisioning:/etc/grafana/provisioning
      - ./docker/grafana/dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yml
      - ./docker/grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - monitoring-network
    depends_on:
      loki:
        condition: service_healthy
    healthcheck:
      test: ['CMD-SHELL', 'curl -f http://localhost:3000/api/health || exit 1']
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    # Resource limits
    mem_limit: 256m
    cpus: 0.25

# ==============================================================================
# Volumes - データ永続化
# ==============================================================================
volumes:
  loki-data:
    name: nextjs-loki-data
    driver: local
  grafana-data:
    name: nextjs-grafana-data
    driver: local

# ==============================================================================
# Networks - ネットワーク分離
# ==============================================================================
networks:
  app-network:
    driver: bridge
    internal: false

  monitoring-network:
    driver: bridge
# ==============================================================================
# 使用方法
# ==============================================================================
#
# 基本起動：
# docker-compose -f docker-compose.prod.yml -f docker-compose.monitoring.yml --env-file .env.prod up -d
#
# アクセス：
# - Webアプリ: http://localhost:8080
# - Grafana: http://localhost:3001 (admin/パスワード)
# - Loki API: http://localhost:3100
#
# 停止：
# docker-compose -f docker-compose.prod.yml -f docker-compose.monitoring.yml down
#
# ==============================================================================
