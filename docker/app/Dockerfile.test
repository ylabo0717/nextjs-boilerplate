# ==============================================================================
# Lightweight Test Dockerfile
# 
# Unit/Integration/E2Eテスト実行専用の軽量Dockerfile
# 既存のnode_modulesを活用してビルド時間を最小化
# ==============================================================================

# Node.js Current Alpine image (compatible with Vite 7 + Vitest 3)
FROM node:22-alpine

# Enable pnpm
ENV PNPM_HOME="/pnpm"
ENV PATH="$PNPM_HOME:$PATH"
RUN npm install -g pnpm@latest

# Install system dependencies
RUN apk add --no-cache curl libc6-compat

# Create non-root user
RUN addgroup --system --gid 1001 nodejs && \
    adduser --system --uid 1001 nextjs

# Set working directory
WORKDIR /app

# Copy package files first (for better layer caching)
COPY package.json pnpm-lock.yaml* ./

# Install dependencies with cache
RUN --mount=type=cache,id=pnpm,target=/pnpm/store \
    pnpm install --frozen-lockfile

# Copy source files (changed less frequently than dependencies)
COPY . .

# Pre-build Next.js with cache (for faster test startup)
RUN --mount=type=cache,id=nextjs,target=/app/.next/cache \
    pnpm build || echo "Build failed, tests will build on demand"

# Set proper ownership for nextjs user
RUN chown -R nextjs:nodejs /app

# Set environment variables
ENV NODE_ENV=test
ENV CI=true
ENV NEXT_TELEMETRY_DISABLED=1

# Switch to non-root user
USER nextjs

# Default command
CMD ["pnpm", "test"]