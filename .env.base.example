# ==============================================================================
# 共通環境変数設定（.env.base.example）
#
# 使用方法:
# 1. このファイルを .env.base にコピー
# 2. 必要に応じて値を調整
# 3. 環境別設定と合わせて使用:
#    - 開発環境: .env.base + .env.dev
#    - 本番環境: .env.base + .env.prod  
#    - テスト環境: .env.base + .env.test
#
# 注意: 環境別ファイルの設定がこのファイルの設定を上書きします
# ==============================================================================

# ------------------------------------------------------------------------------
# Application Configuration - 基本設定
# ------------------------------------------------------------------------------

# アプリケーションバージョン（メトリクス・ログで使用）
APP_VERSION=1.0.0

# Next.js 共通設定
NEXT_TELEMETRY_DISABLED=1

# ------------------------------------------------------------------------------
# OpenTelemetry / Monitoring Configuration - 基本設定
# ------------------------------------------------------------------------------

# OpenTelemetry サービス基本設定（環境別で service.name を上書き）
OTEL_SERVICE_VERSION=${APP_VERSION}

# ------------------------------------------------------------------------------
# Logging Configuration - 共通設定
# ------------------------------------------------------------------------------

# ログレベル設定（全環境共通）
LOG_LEVEL=info

# 構造化ログ有効化
STRUCTURED_LOGGING=true

# ------------------------------------------------------------------------------
# Health Check Configuration - 共通設定
# ------------------------------------------------------------------------------

# ヘルスチェック設定（全環境で統一）
HEALTH_CHECK_INTERVAL=30s
HEALTH_CHECK_TIMEOUT=10s
HEALTH_CHECK_RETRIES=3
HEALTH_CHECK_START_PERIOD=40s

# ------------------------------------------------------------------------------
# Container Configuration - 基本リソース設定
# ------------------------------------------------------------------------------

# 基本リソース制限（本番環境で上書き可能）
CONTAINER_MEMORY_LIMIT=512m
CONTAINER_CPU_LIMIT=0.25

# Nginx基本設定
NGINX_WORKER_PROCESSES=auto
NGINX_WORKER_CONNECTIONS=512

# ------------------------------------------------------------------------------
# Security Configuration - 共通セキュリティ設定
# ------------------------------------------------------------------------------

# CORS基本設定（環境別で詳細設定を上書き）
# ALLOWED_ORIGINS=http://localhost:3000

# CSP基本設定（環境別で詳細設定を上書き）  
# CSP_POLICY=default-src 'self'

# ------------------------------------------------------------------------------
# Performance Configuration - 基本パフォーマンス設定
# ------------------------------------------------------------------------------

# Node.js 基本メモリ制限（環境別で調整可能）
NODE_OPTIONS=--max-old-space-size=512

# ------------------------------------------------------------------------------
# Database Configuration - 共通データベース設定テンプレート
# ------------------------------------------------------------------------------

# データベース接続テンプレート（環境別で実際の値を設定）
# DATABASE_URL=postgresql://username:password@localhost:5432/database_name
# REDIS_URL=redis://localhost:6379

# ------------------------------------------------------------------------------
# External Services Configuration - 共通API設定テンプレート  
# ------------------------------------------------------------------------------

# API設定テンプレート（環境別で実際の値を設定）
# EXTERNAL_API_KEY=your-api-key
# THIRD_PARTY_SERVICE_URL=https://api.service.com

# ------------------------------------------------------------------------------
# IMPORTANT NOTES - 使用上の注意
# ------------------------------------------------------------------------------
#
# 📋 使用方法:
# 1. この .env.base.example を .env.base にコピー
# 2. 必要な環境別ファイルをコピー:
#    - 開発: .env.dev.example → .env.dev
#    - 本番: .env.prod.example → .env.prod  
#    - テスト: .env.test.example → .env.test
# 3. 実際の値を各ファイルで設定
#
# 🔄 読み込み順序:
# 1. .env.base （共通設定）
# 2. .env.{環境} （環境別設定で上書き）
#
# 🔒 セキュリティ:
# - 実際の .env.* ファイルは .gitignore に含まれています
# - 本番環境では強固なパスワード・秘密鍵を必ず設定してください
#
# ==============================================================================