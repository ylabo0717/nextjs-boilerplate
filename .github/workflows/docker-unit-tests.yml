name: Docker Unit Tests

on:
  push:
    branches: [main, develop]
    paths:
      - 'src/**'
      - 'tests/unit/**'
      - 'tests/lib/**'
      - 'package.json'
      - 'pnpm-lock.yaml'
      - 'vitest.*.config.ts'
      - 'docker/app/**'
      - 'docker-compose.test.yml'
      - '.github/workflows/docker-unit-tests.yml'
      - '.github/actions/setup-docker-test-env/**'
      - '.github/actions/docker-cleanup/**'
  pull_request:
    branches: [main, develop]
    paths:
      - 'src/**'
      - 'tests/unit/**'
      - 'tests/lib/**'
      - 'package.json'
      - 'pnpm-lock.yaml'
      - 'vitest.*.config.ts'
      - 'docker/app/**'
      - 'docker-compose.test.yml'
      - '.github/workflows/docker-unit-tests.yml'
      - '.github/actions/setup-docker-test-env/**'
      - '.github/actions/docker-cleanup/**'

env:
  NODE_VERSION: '20.x'
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

concurrency:
  group: docker-unit-tests-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  docker-unit-tests:
    name: Docker Unit Tests
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Docker test environment
        uses: ./.github/actions/setup-docker-test-env
        with:
          test-type: 'unit'
          enable-testcontainers: 'false'
          create-directories: 'true'

      - name: Build test image
        run: |
          echo "ðŸ”¨ Building Docker test image for unit tests..."
          docker compose -f docker-compose.test.yml build app-test

      - name: Run Unit Tests in Docker
        run: |
          echo "ðŸ§ª Running unit tests in Docker environment..."
          docker compose -f docker-compose.test.yml run --rm app-test pnpm test:unit

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: docker-unit-test-results-${{ github.sha }}
          path: |
            test-results/
            coverage/
          retention-days: 7
          if-no-files-found: ignore

      - name: Clean up Docker environment
        if: always()
        uses: ./.github/actions/docker-cleanup
        with:
          cleanup-level: 'basic'
          compose-file: 'docker-compose.test.yml'
          preserve-cache: 'true'

      - name: Post test summary
        if: always()
        run: |
          echo "ðŸ“Š Docker Unit Tests Summary"
          echo "  Test Type: Unit Tests"
          echo "  Environment: Docker"
          echo "  Duration: ${{ job.status == 'success' && 'Completed successfully' || 'Failed or cancelled' }}"
          echo "  Artifacts: Unit test results and coverage uploaded"